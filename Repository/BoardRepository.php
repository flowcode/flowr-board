<?php

namespace Flower\BoardBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BoardRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BoardRepository extends EntityRepository
{

    /**
     * @param array $filter
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getAllByUserQB($userId = null, $filter = array())
    {
        $qb = $this->createQueryBuilder('b');
        foreach ($filter as $field => $value) {
            $qb->orWhere("b." . $field . " LIKE :" . $field . "_value")->setParameter($field . "_value", "%" . $value . "%");
        }

        if (!is_null($userId)) {
            $qb->leftJoin("b.owner", "u");
            $qb->where("u.id = :user_id")->setParameter("user_id", $userId);
        }
        $qb->orWhere("b.private = :private")->setParameter("private", false);

        return $qb;
    }

    public function getCountTodo()
    {
        $qb = $this->createQueryBuilder("b");
        $qb->select("COUNT(b)");
        //$qb->innerJoin("t.status", "s", Join::WITH, 's.name = :status_name')->setParameter("status_name", TaskStatus::STATUS_TODO);
        return $qb->getQuery()->getSingleScalarResult();
    }

}
